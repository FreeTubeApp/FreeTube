@use '../../scss-partials/ft-list-item';

.playlistItemsCard {
  display: flex;
  flex-direction: column;
  grid-gap: 10px;
  margin: 0;
  padding: 10px;
}

.playlistInfoContainer {
  box-sizing: border-box;
  background-color: var(--card-bg-color);
  /* This is needed to make prompt always above video entries */
  /* Value being too high would block search suggestions */
  z-index: 1;
  .playlistInfo {
    &.promptOpen {
      // Otherwise sidebar would be above the prompt
      z-index: 200;
    }
  }
}



.routerView {
  display: flex;

  &.grid {
    flex-direction: column;
    margin-block-start: 200px;

    .playlistItemsCard {
      inline-size: 85%;
      margin-block: 0px 60px;
      margin-inline: auto;
    }

    .playlistInfoContainer {
      @include ft-list-item.fixed-top-bar;
      padding-block: 0;
    }

    .playlistInfo {
      inline-size: 85%;
      margin-inline: auto;
      padding-block: 10px;
      padding-inline: 16px;
      box-shadow: 0 2px 1px 0 var(--primary-shadow-color);
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  }

  &.list {
    .playlistItemsCard {
      inline-size: 60%;
    }

    .playlistInfoContainer {
      block-size: calc(100vh - 132px);
      inline-size: 30%;
      inset-block-start: 96px;
      margin-inline-end: 1em;
      position: sticky;

      .playlistInfo {
        padding: 10px;
      }
    }
  }
}


.playlistItem {
  display: grid;
  grid-template-columns: 30px 1fr;
  column-gap: 8px;
  align-items: center;
}

.playlistItem-move ,
.playlistItem-enter-active,
.playlistItem-leave-active {
  transition: all 0.2s ease;

  // Hide action buttons during transitions
  //
  // The class for icon container is mainly styled in `_ft-list-item.scss`
  // But the transition related classes are all on container elements
  // So `:deep` is used
  :deep(.ft-list-item .videoThumbnail .playlistIcons) {
    display: none;
  }
  // Prevent link click
  :deep(.ft-list-item .videoThumbnail .thumbnailLink) {
    // https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events
    pointer-events: none;
  }
}
.playlistItem-enter, .playlistItem-leave-to {
  opacity: 0;
  transform: translate(calc(10% * var(--horizontal-directionality-coefficient)));
}

.loadNextPageWrapper {
  /* about the same height as the button */
  max-block-size: 7vh;
}

.sortSelect {
  /* Put it on the right */
  margin-inline-start: auto;
  /* Align with 'More Options' dropdown button */
  margin-inline-end: 20px;
}

:deep(.videoThumbnail) {
  margin-block-start: auto;
  margin-block-end: auto;
}

@media only screen and (max-width: 850px) {
  .routerView {
    flex-direction: column;

    &.list {
      .playlistInfoContainer {
        box-sizing: border-box;
        position: relative;
        inset-block-start: 0;
        z-index: 1;
        block-size: auto;
        inline-size: 100%;
      }
    }

    &.grid {
      .playlistInfoContainer {
        padding-inline: 20px;
      }
    }

    &.grid, &.list {
      .playlistItemsCard {
        box-sizing: border-box;
        inline-size: 100%;
      }
    }
  }
}

.message {
  color: var(--tertiary-text-color);
}

@media only screen and (max-width: 680px) {
  .routerView.grid {
    margin-block-start: 230px;
    .playlistInfoContainer {
      position: absolute;
    }
  }
}
